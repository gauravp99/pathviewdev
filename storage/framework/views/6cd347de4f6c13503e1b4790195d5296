<?php $__env->startSection('content'); ?>
    <?php echo $__env->make('navigation', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
    <?php if(is_null(Auth::user())): ?>
        <h2> welcome Guest </h2>
    <?php else: ?>
        <p> welcome: <b><?php if(Auth::user()->name==""): ?> <?php echo Auth::user()->email; ?> <?php else: ?> <?php echo Auth::user()->name; ?>, <?php endif; ?> </b></p>
    <?php endif; ?>
    <p><b>Example Three Analysis: ID Mapping</b></p>
    <?php if($errors->any()): ?>
        <ul class="alert alert-danger">
            <?php foreach($errors->all() as $error): ?>
                <li><?php echo e($error); ?></li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>
    <div id="content">
        <div id="wrapper">
            <div id="navigation" style="display:none;">
                <ul>
                    <li class="selected">
                        <a href="#">Input & Output:</a>
                    </li>
                    <li>
                        <a href="#">Graphics:</a>
                    </li>
                    <li>
                        <a href="#">Colouration:</a>
                    </li>
                    <li>
                        <a href="#">Confirm:</a>
                    </li>
                </ul>
            </div>
            <div id="steps">
                <?php echo form::open(array('url' => 'post_exampleAnalysis3','method'=>'POST','files'=>true)); ?>

                <fieldset class="step">
                    <p> <a href="tutorial#gene_data" title="Upload gene data accepts CSV, Rdata, txt file"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('gcheck','Gene Data:'); ?>

                        <?php echo form::checkbox('gcheck','T',true); ?><?php echo form::label('gfile','gse16873.d3.txt'); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#cpd_data" title="Upload Compound data accepts CSV, Rdata, txt file"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('cpdcheck','Compound Data:'); ?>


                        <?php echo form::checkbox('cpdcheck','T',true); ?><?php echo form::label('cpdfile','sim.cpd.data2.csv'); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#gene_id" title="ID type used for the Gene Data"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('geneid','Gene Id:'); ?>

                        <input class="ex8" list="geneidlist" name="geneid" id="geneid" value="ENSEMBLPROT" required=""
                               autocomplete="on"></p>

                    <datalist id="geneidlist">
                        <?php
                        $gene = DB::table('gene')->get();
                        foreach ($gene as $gene1) {
                            echo "<option>$gene1->geneid</option>";
                        }
                        ?></datalist>
                    <p><a href="tutorial#cpd_id" title="ID type used for the Compound Data"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('cpdid','Compound ID:'); ?>

                        <?php /*<?php echo form::text('cpdid','KEGG'); ?>*/ ?>
                        <input class="ex8" list="cpdidlist" name="cpdid" id="cpdid" value="CAS Registry Number"
                               required="" autocomplete="on">
                        <datalist id="cpdidlist">
                            <?php
                            $compound = DB::table('compound')->get();
                            foreach ($compound as $compound1) {
                                echo "<option>$compound1->cmpdid</option>";
                            }
                            ?>

                        </datalist>
                    </p>

                    <br/>
                    <br/>

                    <p><a href="tutorial#species" title="KEGG code, scientific name or the common name of the target species"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('species','Species:'); ?>

                        <?php /* <?php echo form::text('species','hsa-Homo sapiens'); ?></p>*/ ?>
                        <input class="ex8" list="specieslist" name="species" id="species" value="hsa-Homo sapiens"
                               required="" autocomplete="on">
                        <datalist id="specieslist">
                            <?php
                            $species = DB::table('Species')->get();
                            foreach ($species as $species1) {
                                echo "<option>" . $species1->species_id . "-" . $species1->species_desc . "</option>";
                            }
                            ?>

                        </datalist>
                    <p id="pat_div"><a href="tutorial#pwy_id"
                                       title="The KEGG pathway ID, usually 5 digit, may also include the 3 letter KEGG species code"
                                       target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('pathway','Pathway:'); ?>

                        <?php /*<?php echo form::text('pathway','00010-Glycolysis / Gluconeogenesis'); ?>*/ ?>
                        <input class="ex8" list="pathwaylist" name="pathway" id="pathway"
                               value="00640-Propanoate metabolism" required="" autocomplete="on">
                        <input class="ex88" id="addbtn" value="Add" onclick="addText()" type="button">
                        <input class="ex88" id="rmvbtn" value="Remove" onclick="removeText()" type="button">
                        <br/>
                    </p>
                    <datalist id="pathwaylist">
                        <?php
                        $pathway = DB::table('Pathway')->get();
                        foreach ($pathway as $pathway1) {
                            echo "<option>" . $pathway1->pathway_id . "-" . $pathway1->pathway_desc . "</option>";
                        }
                        ?>

                    </datalist>
                    <?php

                    $pathidx = -1;
                    while (isset($_POST["pathway$pathidx"])) {
                        $pathidx++;
                    }

                    for ($pathnidx = 1; $pathnidx < $pathidx; $pathnidx++) {
                        echo "<input class=\"ex8\" list=\"pathwaylist\" name=\"pathway" . $pathnidx . " id=\"pathway" . $pathnidx . " value=" . $_POST["pathway$pathnidx"] . " >";

                    }


                    ?>
                    <script type="text/javascript">
                        var i = 1;
                        function addText() {

                            var el = document.createElement("input");
                            el.setAttribute("name", "pathway" + i);
                            el.setAttribute("id", "pathway" + i);
                            el.setAttribute("list", "pathwaylist");
                            el.setAttribute("value", "00010-Glycolysis / Gluconeogenesis");
                            el.setAttribute("required", "required");

                            var foo = document.getElementById("pat_div");

                            foo.appendChild(document.createElement("br"));
                            foo.appendChild(el);
                            foo.appendChild(document.createElement("br"));
                            i++;


                        }

                        function removeText() {

                            if (i > 1) {
                                console.log(i);
                                var pat = document.getElementById("pat_div");
                                for (j = 0; j < 3; j++)
                                    pat.removeChild(pat.lastChild);
                                i--;
                            }
                        }
                        function fileCheck() {
                            var f = document.getElementById("gfile");
                            if (f.value.length < 4) {
                                alert('No Gene Data file Uploaded');
                                return false;
                            }

                        }
                    </script>

                    <p><a href="tutorial#suffix"
                          title="The suffix to be added after the pathway name as part of the output graph file"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a> <?php echo form::label('suffix','suffix:'); ?>

                        <?php echo form::text('suffix','IDMapping'); ?></p>
                    <input type="submit" class="styled-button-2" value="Submit" onclick="return fileCheck()"/>
                    <input type="Reset" class="styled-button-2" value="Reset"/>
                </fieldset>
                <fieldset class="step">

                    <p> <a href="tutorial#kegg"
                           title="to render pathway graph as native KEGG graph"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('kegg','Kegg Native:'); ?>

                        <?php echo form::checkbox('kegg','T',true); ?>

                        <?php echo form::label('layer','Same Layer:'); ?>

                        <?php echo form::checkbox('layer','T',true); ?></p>

                    <p><a href="tutorial#desc"
                          title="This argument tells whether gene data or compound data should be treated as discrete"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('gdesc',' Descrete Gene:'); ?>

                        <?php echo form::checkbox('gdesc','T',false); ?>

                        <?php echo form::label('cdesc','Descrete Compound:'); ?>

                        <?php echo form::checkbox('cdesc','T',false); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#split"
                          title="This argument tells whether gene data or compound data should be treated as discrete"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('split','Split Group:'); ?>

                        <?php echo form::checkbox('split','T',false); ?>

                        <?php echo form::label('expand','Expand Node:'); ?>

                        <?php echo form::checkbox('expand','T',false); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#multi"
                          title="Whether multiple states (samples or columns) gene data or compound data should be integrated / Whether the samples of gene data and Compound data are paired"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('multistate','Multi State:'); ?>

                        <?php echo form::checkbox('multistate','T',true); ?>

                        <?php echo form::label('matchd','Match Data:'); ?>

                        <?php echo form::checkbox('matchd','T',true); ?></p>

                    <p><a href="tutorial#offset"
                          title="Specifies how much compound labels should be put above the default position or node center"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('offset','Compound Label Offset:'); ?>

                        <?php echo form::text('offset','1.0'); ?></p>

                    <p><a href="tutorial#kalign"
                          title="Controls how the color keys are aligned when both Gene Data and Compound Data "
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('align','Key Alignment:'); ?>

                        <?php echo form::select('align', array('x' => 'x', 'y' => 'y'), 'y'); ?></p>

                    <p><a href="tutorial#spos"
                          title="Controls the position of pathview signature and color keys"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('pos','Signature Position:',array('class' => 'awesome')); ?>

                        <?php echo form::select('pos', array('bottomleft' => 'bottom left', 'bottomright' => 'bottom
                        right','topleft' => 'top left', 'topright' => 'top right'),'bottomleft'); ?>

                        <?php echo form::label('kpos','Key Position:'); ?>

                        <?php echo form::select('kpos', array('bottomleft' => 'bottom left', 'bottomright' => 'bottom
                        right','topleft' => 'top left', 'topright' => 'top right'),'topright'); ?></p>
                    <br/>
                    <input type="submit" class="styled-button-2" value="Submit" onclick="return fileCheck()"/>
                    <input type="Reset" class="styled-button-2" value="Reset"/>
                </fieldset>
                <fieldset class="step">
                    <style>
                        .coloration {
                            width: 150px;
                        }

                        .ex8 {

                        }
                    </style>
                    <p><a href="tutorial#nsum"
                          title="The method name to calculate node summary given that multiple genes or compounds are mapped to it."
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('nodesum','Node Sum:',array('class' => 'awesome')); ?>

                        <?php echo form::select('nodesun', array('sum' => 'sum', 'mean' => 'mean','median' => 'median', 'max' => 'max','max.abs' => 'max.abs' ,'random' => 'random'),'sum'); ?></p>

                    <p class="coloration"><a href="tutorial#ncolor"
                                             title="Color used for NA’s or missing values in Gene Data and Compound Data.."
                                             target="_blank" class="scrollToTop" style="float:left;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('nacolor','NA Color:'); ?>

                        <?php echo form::text('nacolor','transparent'); ?></p>

                    <p><a href="tutorial#limit"
                          title="This argument specifies the limit values for Gene Data and Compound Data when converting them to pseudo colors"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('limit','Gene Limit:'); ?>

                        <?php echo form::text('glmt','3',array('class' => 'coloration')); ?>

                        <?php echo form::label('limit','Compound Limit:'); ?>

                        <?php echo form::text('clmt','3',array('class' => 'coloration')); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#bins"
                          title="This argument specifies the number of levels or bins for Gene Data and Compound Data when converting them to pseudo colors"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('Bins','Gene Bins:'); ?>

                        <?php echo form::text('gbins','6',array('class' => 'coloration')); ?>

                        <?php echo form::label('Bins','Compound Bins:'); ?>

                        <?php echo form::text('cbins','6',array('class' => 'coloration')); ?></p>
                    <br/>
                    <br/>

                    <p><a href="tutorial#color"
                          title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('glow','Gene Low:'); ?>

                        <?php echo form::text('glow','green',array('class' => 'coloration')); ?>

                        <?php echo form::label('clow','Compound Low:'); ?>

                        <?php echo form::text('clow','blue',array('class' => 'coloration')); ?></p>

                    <p><a href="tutorial#color"
                          title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                          target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('gmid','Gene Mid:'); ?>

                        <?php echo form::text('gmid','gray',array('class' => 'coloration')); ?>


                        <?php echo form::label('cmid','Compound Mid:'); ?>

                        <?php echo form::text('cmid','gray',array('class' => 'coloration')); ?></p>

                    <p> <a href="tutorial#color"
                           title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('ghigh','Gene High:'); ?>

                        <?php echo form::text('ghigh','red',array('class' => 'coloration')); ?>

                        <?php echo form::label('chigh','Compound High:'); ?>

                        <?php echo form::text('chigh','yellow',array('class' => 'coloration')); ?></p>

                    <input type="submit" class="styled-button-2" value="Submit" onclick="return fileCheck()"/>
                    <input type="Reset" class="styled-button-2" value="Reset"/>
                </fieldset>
                <fieldset class="step">

                    <p class="success">
                        <b>Ready to go?</b>
                    </p>
                    <?php /* <p><?php echo form::submit(); ?></p>*/ ?>
                    <input type="submit" class="styled-button-2" value="Submit" onclick="return fileCheck()"/>
                    <input type="Reset" class="styled-button-2" value="Reset"/>
                </fieldset>


                <?php echo form::close(); ?>

            </div>

        </div>
    </div>


<?php $__env->stopSection(); ?>
<?php echo $__env->make('app', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>