<?php $__env->startSection('content'); ?>

    <?php echo $__env->make('navigation', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
    <?php /*Start to check if the user is logged in or not if user is logged in then user profile is loaded */ ?>
    <?php if(is_null(Auth::user())): ?>
        <h2> welcome Guest </h2>
    <?php else: ?>
        <p> welcome: <b><?php if(Auth::user()->name==""): ?> <?php echo Auth::user()->email; ?> <?php else: ?> <?php echo Auth::user()->name; ?>, <?php endif; ?> </b></p>
    <?php endif; ?>
    <?php /*end to check if the user is logged in or not if user is logged in then user profile is loaded */ ?>

    <?php /*Main Heading/Title of the page */ ?>

    <p><b>New Pathway Analysis</b></p>

    <?php /*Error Displaying div for the web page */ ?>
    <div class="col-sm-2">

        <?php /*Printing errors detected from laravel validation of the page */ ?>
        <?php if($errors->any()): ?>
            <ul class="alert alert-danger">
                <?php foreach($errors->all() as $error): ?>
                    <li><?php echo e($error); ?></li>
                <?php endforeach; ?>
            </ul>
        <?php endif; ?>

        <?php /*Printing errors handled manually of the page */ ?>
        <?php if(Session::get('err')!=NULL): ?>

            <ul class="alert alert-danger">
                <?php
                for ($x = 0; $x < sizeof(Session::get('err')); $x++) {
                    echo "<li>" . Session::get('err')[$x] . "</li>";
                }
                ?>
            </ul>

        <?php endif; ?>
        <ul id="errors" hidden="true" class="alert alert-danger">

        </ul>

    </div>

    <?php
    $gfile = "";
    $cpdfile = "";
    $geneid = "ENTREZ";
    $cpdid = "KEGG";
    $species = "hsa-Homo sapiens";
    $pathway = "00010-Glycolysis / Gluconeogenesis";
    $pathidx = 0;
    $suffix = "pathview";
    $kegg = true;
    $layer = true;
    $split = false;
    $expand = false;
    $multistate = true;
    $matchd = true;
    $gdisc = false;
    $cdisc = false;
    $kpos = "topright";
    $pos = "bottomleft";
    $offset = "1.0";
    $align = "y";
    $glmt = 1;
    $gbins = 10;
    $glow = "green";
    $gmid = "grey";
    $ghigh = "red";
    $clmt = 1;
    $cbins = 10;
    $clow = "blue";
    $cmid = "grey";
    $chigh = "yellow";
    $nsum = "sum";
    $ncolor = "transparent";
    ?>

    <?php /*Div for Form for generating the analysis Form is devided into pages
    1. Input and Output
    2. Graphics
    3. Coloration */ ?>

    <div id="content">
        <div id="wrapper">
            <div id="navigation" style="display:none;">
                <ul>
                    <li class="selected">
                        <a href="#">Input & Output</a>
                    </li>
                    <li>
                        <a href="#">Graphics</a>
                    </li>
                    <li>
                        <a href="#">Coloration</a>
                    </li>
                    <?php /* <li>
                         <a href="#">Confirm</a>
                     </li>*/ ?>
                </ul>
            </div>



            <?php /*Input and Output slider */ ?>
            <div id="steps">

                <?php /*Form Method: POST Action:postAnalysis with internally leads to AnalysisController Controller*/ ?>

                <?php echo form::open(array('url' => 'postAnalysis','method'=>'POST','files'=>true,'id' => 'anal_form')); ?>


                <fieldset class="step">
                    <input type="hidden" id="page_is_dirty" name="page_is_dirty" value="0"/>

                    <p id="gfile-div" <?php if(isset(Session::get('err_atr')['gfile'])): ?>
                       style="background-color:#DA6666;" <?php endif; ?>><a
                                href="tutorial#gene_data" title="Upload gene data accepts CSV, txt file"
                                target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('gfile','Gene Data:'); ?>

                        <?php echo form::file('gfile'); ?>

                        <?php
                        if(isset(Session::get('Sess')['tempgene']))
                        {
                        echo "<br/><br/>";

                        echo "<input name='gcheck' id='gcheck' value='T' style='margin-left:30px' type='checkbox'";
                        if (isset(Session::get('Sess')['gcheck'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess')['tempgene'] != NULL) {
                                echo "checked";
                            }
                        }
                        ?>>
                        <input type="hidden" id="page_is_dirty" name="genetemp"
                               value=<?php echo e(Session::get('Sess')['tempgene']); ?>/>
                        Uploaded File <a href="<?php echo e(Session::get('Sess')['tempgene']); ?>" target="_blank"
                                         style="margin-left: -260px;"><?php echo e(Session::get('Sess')['tempgenename']); ?></a>

                        <br/>
                        <br/>

                        <?php
                        }

                        ?>

                    </p>

                    <br/>
                    <br/>

                    <p id="cfile-div" <?php if(isset(Session::get('err_atr')['cfile'])): ?>
                       style="background-color:#DA6666;" <?php endif; ?>><a
                                href="tutorial#cpd_data" id="cfile" title="Upload Compound data accepts CSV, txt file"
                                target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('cpdfile','Compound
                        Data:'); ?>


                        <?php echo form::file('cpdfile'); ?>


                        <?php
                        if(isset(Session::get('Sess')['tempcpd']))
                        {
                        echo "<br/><br/>";
                        echo "<input name='cpdcheck' id='cpdcheck' value='T' style='margin-left:-30px' type='checkbox'";
                        if (isset(Session::get('Sess')['cpdcheck'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess')['tempcpd'] != NULL) {
                                echo "checked";
                            }
                        }

                        ?>>
                        <input type="hidden" id="page_is_dirty" name="cpdtemp"
                               value=<?php echo e(Session::get('Sess')['tempcpd']); ?>/>
                        Uploaded File <a href="<?php echo e(Session::get('Sess')['tempcpd']); ?>" target="_blank"
                                         style="margin-left: -260px;"><?php echo e(Session::get('Sess')['tempcpdname']); ?></a>

                        <?php
                        }

                        ?>



                    </p>


                    <p id="geneid-div"
                            <?php /*code to highlight if input has error*/ ?>
                    <?php if(isset(Session::get('err_atr')['geneid'])): ?> style="background-color:#DA6666;" <?php endif; ?>>
                        <a href="tutorial#gene_id" title="ID type used for the Gene Data"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>

                        <?php echo form::label('geneid','Gene Id:'); ?>


                        <input class="ex8" list="geneidlist" name="geneid" id="geneid"
                               value="<?php echo isset(Session::get('Sess')['geneid']) ? Session::get('Sess')['geneid'] : $geneid ?>"

                               autocomplete="on">
                    </p>

                    <datalist id="geneidlist">
                        <?php
                        $gene = DB::table('gene')->get();
                        foreach ($gene as $gene1) {
                            echo "<option>$gene1->geneid</option>";
                        }
                        ?>
                    </datalist>

                    <p id="cpdid-div"
                            <?php /*code to highlight if input has error*/ ?>
                    <?php if (isset(Session::get('err_atr')['cpdid'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#cpd_id" title="ID type used for the Compound Data" target="_blank"
                           class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>
                        <?php echo form::label('cpdid','Compound ID:'); ?>

                        <?php /*<?php echo form::text('cpdid','KEGG'); ?>*/ ?>
                        <input class="ex8" list="cpdidlist" name="cpdid" id="cpdid"
                               value="<?php echo isset(Session::get('Sess')['cpdid']) ? Session::get('Sess')['cpdid'] : $cpdid ?>"

                               autocomplete="on">
                        <datalist id="cpdidlist">
                            <?php
                            $compound = DB::table('compound')->get();
                            foreach ($compound as $compound1) {
                                echo "<option>$compound1->cmpdid</option>";
                            }
                            ?>

                        </datalist>
                    </p>


                    <p id="species-div" <?php if (isset(Session::get('err_atr')['species'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#species"
                           title="KEGG code, scientific name or the common name of the target species"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>
                        <?php echo form::label('species','Species:'); ?>

                        <?php /* <?php echo form::text('species','hsa-Homo sapiens'); ?></p>*/ ?>
                        <input class="ex8" list="specieslist" name="species" id="species"
                               value="<?php echo isset(Session::get('Sess')['species']) ? Session::get('Sess')['species'] : $species ?>"
                               autocomplete="on">
                        <datalist id="specieslist">
                            <?php
                            $species = DB::table('Species')->get();
                            foreach ($species as $species1) {
                                echo "<option>" . $species1->species_id . "-" . $species1->species_desc . "</option>";
                            }
                            ?>

                        </datalist>


                        <script>
                            $(document).ready(function () {

                                $('#reset').click(function () {
                                    $('#select-to')
                                            .find('option')
                                            .remove()
                                            .end()
                                            .append('<option value="00010-Glycolysis / Gluconeogenesis">00010-Glycolysis / Gluconeogenesis</option>')
                                            .val('whatever')
                                    ;
                                });

                                $('#btn-add').click(function () {

                                    $('#select-from option:selected').each(function () {
                                        var exists = false;
                                        var val = $(this).val();
                                        $('#select-to  option').each(function () {
                                            if (this.value == val) {
                                                exists = true;
                                            }
                                        });


                                        if (!exists) {
                                            $('#select-to').append("<option value='" + $(this).val() + "'>" + $(this).text() + "</option>");
                                        }


                                    });
                                });
                                $('#btn-add1').click(function () {

                                    var val = $("#pathway1").val();
                                    var exists = false;
                                    $('#select-to  option').each(function () {
                                        if (this.value == val) {
                                            exists = true;
                                        }
                                    });
                                    if (!exists) {
                                        if (!in_pathway_array(pathway_array, val.substring(0, 5))) {
                                            alert("Not a Valid pathway");
                                        }
                                        else {
                                            $("<option />", {'value': val, text: val}).appendTo("#select-to");
                                        }
                                    }
                                });
                                $('#btn-remove').click(function () {
                                    $('#select-to option:selected').each(function () {

                                        $(this).remove();
                                    });
                                });

                            });
                        </script>
                    <div class="stepsdiv    " <?php
                            if (isset(Session::get('err_atr')['pathway'])) {
                                echo "style='background-color:#DA6666;'";
                            } ?> id="pat-select">
                        <div class="col-sm-12">
                            <div class="col-sm-6">
                                <a href="tutorial#pwy_id"
                                   title="The KEGG pathway ID, usually 5 digit, may also include the 3 letter KEGG species code"
                                   target="_blank" class="scrollToTop"
                                   style="float:left;margin-right:5px;margin-left: -10px"><span
                                            class="glyphicon glyphicon-info-sign" style="margin-left:-20px"></span></a>
                                <?php echo form::label('pathway','Pathway:',array('style'=>'margin-left: -130px')); ?>

                                <br/>
                                <input class="ex8" list="pathwaylist" name="pathway" id="pathway1"
                                       style="margin-left: -10px;width: 90%;"

                                       value="<?php echo isset(Session::get('Sess')['pathway']) ? Session::get('Sess')['pathway'] : $pathway ?>"
                                       required="" autocomplete="on">

                                <a class="margin-top:-10px" href="JavaScript:void(0);" id="btn-add1"> <span
                                            style="margin-left: -1px;margin-top: 1px;padding: 3px;"
                                            class="glyphicon glyphicon-plus"></span></a>
                                <br/>
                                <br/>
                                <select name="selectfrom" style="float:none;width:220px;font-size: 15px;"
                                        id="select-from"
                                        multiple="" size="7" class="multiple-select">


                                    <?php
                                    $pathway = DB::table('Pathway')->get();

                                    foreach ($pathway as $pathway1) {
                                        echo "<option>" . $pathway1->pathway_id . "-" . $pathway1->pathway_desc . "</option>";
                                    }
                                    ?>

                                </select>


                                <a class="margin-top:-10px" href="JavaScript:void(0);" id="btn-add"
                                   style="font-size:24px;"><span class="glyphicon glyphicon-forward"
                                                                 style="top: -130px;margin-left:0px  "></span></a></button>
                                <a class="" href="JavaScript:void(0);"
                                   id="btn-remove" style="font-size:24px;"><span class="glyphicon glyphicon-backward"
                                                                                 style="margin-left: -26px;"></span></a>

                            </div>
                            <div class="col-sm-6">
                                <select name="selectto[]"
                                        style="float:none;width:220px;font-size: 15px;margin-left: 5px" id="select-to"
                                        multiple="multiple" size="12" class="multiple-select">

                                    <?php if (isset(Session::get('Sess')['selectto'])) {
                                        foreach (Session::get('Sess')['selectto'] as $pathway)
                                            echo "<option>" . $pathway . "</option>";
                                    } else
                                        echo "<option>00010-Glycolysis / Gluconeogenesis</option>";
                                    ?>

                                </select>

                            </div>
                        </div>


                    </div>
                    <datalist id="pathwaylist">
                        <?php
                        $pathway = DB::table('Pathway')->get();
                        foreach ($pathway as $pathway1) {
                            echo "<option>" . $pathway1->pathway_id . "-" . $pathway1->pathway_desc . "</option>";
                        }
                        ?>

                    </datalist>
                    <?php

                    $pathidx = -1;
                    while (isset($_POST["pathway$pathidx"])) {
                        $pathidx++;
                    }

                    for ($pathnidx = 1; $pathnidx < $pathidx; $pathnidx++) {
                        echo "<input class=\"ex8\" list=\"pathwaylist\" name=\"pathway" . $pathnidx . " id=\"pathway" . $pathnidx . " value=" . Session::get('Sess')["pathway$pathnidx"] . " >";

                    }


                    ?>

                    <script type="text/javascript">
                        var dirty_bit = document.getElementById('page_is_dirty');

                        if (document.getElementById('page_is_dirty').value != '1') {

                            document.getElementById('page_is_dirty').value = '1';
                            for (var j = 0; j < parseInt(readCookie("pathidx")); j++) {
                                eraseCookie("pathway" + j);
                                eraseCookie("pathidx");
                            }


                        }
                        else {

                            if (readCookie("pathidx") === null) {

                            }
                            else {

                                i = parseInt(readCookie("pathidx"));
                                var x = document.getElementById("select-to");
                                document.getElementById("select-to").innerHTML = "";
                                for (var j = 0; j < i; j++) {

                                    var option = document.createElement("option");
                                    option.text = readCookie("pathway" + j);
                                    eraseCookie("pathway" + j);
                                    document.getElementById("select-to").add(option);
                                }
                            }
                        }


                        var pathway_array = [];
                        var species_array = [];
                        var gene_array = [];
                        var cmpd_array = [];
                        <?php
                        $pathway = DB::table('Pathway')->get(array('pathway_id'));?>
                        <?php
                        $species = DB::table('Species')->get(array('species_id'));?>
                        <?php
              $species = DB::table('Species')->get(array('species_id'));?>
                        <?php
              $gene = DB::table('gene')->get(array('geneid'));?>
                        <?php
            $cmpd = DB::table('compound')->get(array('cmpdid'));?>
                        pathway_array = <?php echo JSON_encode($pathway);?>;
                        species_array = <?php echo JSON_encode($species);?>;
                        gene_array = <?php echo JSON_encode($gene);?>;
                        cmpd_array = <?php echo JSON_encode($cmpd);?>;


                        /*checking the geneid is in the list or not */

                        function in_gene_array(gene, id) {
                            for (var i = 0; i < gene.length; i++) {
                                //console.log(gene[i]['geneid']);
                                if (gene[i]['geneid'].toLowerCase() === id.toLowerCase()) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        function in_species_array(gene, id) {
                            for (var i = 0; i < gene.length; i++) {
                                //console.log(gene[i]['geneid']);
                                if (gene[i]['species_id'].toLowerCase() === id.toLowerCase()) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        function in_cmpd_array(gene, id) {
                            for (var i = 0; i < gene.length; i++) {
                                //console.log(gene[i]['geneid']);
                                if (gene[i]['cmpdid'].toLowerCase() === id.toLowerCase()) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        function in_pathway_array(gene, id) {
                            for (var i = 0; i < gene.length; i++) {
                                //console.log(gene[i]['geneid']);
                                if (gene[i]['pathway_id'].toLowerCase() === id.toLowerCase()) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        function fileCheck() {
                            var errors = document.getElementById("errors");
                            errors.innerHTML = "";
                            var selectBox = document.getElementById("select-to");
                            var geneid = document.getElementById("geneid");
                            var cpdid = document.getElementById("cpdid");
                            var offset = document.getElementById("offset");
                            var suffix = document.getElementById("suffix");
                            var species = document.getElementById("species");
                            var glmt = document.getElementById("glmt");
                            var gbins = document.getElementById("gbins");
                            var clmt = document.getElementById("clmt");
                            var cbins = document.getElementById("cbins");
                            var glow = document.getElementById("glow");
                            var gmid = document.getElementById("gmid");
                            var ghigh = document.getElementById("ghigh");
                            var gfilediv = document.getElementById("gfile-div");





                            var j;
                            var f = document.getElementById("gfile");
                            var regex = new RegExp("(.*?)\.(txt|csv)$");
                            var error = false;

                            document.getElementById("nacolor").value = document.getElementById("nacolor").value.replace(/\W/g, "");
                            if (f.value.length < 4) {

                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Upload the Gene data file "));
                                errors.appendChild(li);
                                document.getElementById('gfile-div').style.backgroundColor = "#DA6666";
                                error = true;

                            }
                            else if (!regex.test(document.getElementById('gfile').value)) {
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Upload the Gene data file extension is not supported. supports only txt and csv files "));
                                errors.appendChild(li);
                                gfilediv.style.backgroundColor = "#DA6666";
                                error = true;


                            }
                            else {
                                document.getElementById('gfile-div').style.backgroundColor = "#F4F4F4";

                            }


                            if (selectBox.options.length == 0) {

                                var myElement = document.getElementById("pat-select");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("At least one Pathway should be selected"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else {
                                var myElement = document.getElementById("pat-select");
                                myElement.style.backgroundColor = "#F4F4F4";

                            }


                            if (geneid.value == "") {

                                var myElement = document.getElementById("geneid-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Gene id Cannot be empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else if (!in_gene_array(gene_array, geneid.value)) {

                                var myElement = document.getElementById("geneid-div");
                                myElement.style.backgroundColor = "#DA6666";

                                var li = document.createElement("li");

                                li.appendChild(document.createTextNode("Gene id is not valid"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else {
                                var myElement = document.getElementById("geneid-div");
                                myElement.style.backgroundColor = "#F4F4F4";

                            }

                            var f1 = document.getElementById("cpdfile");
                            if (f1.value.length > 4 && cpdid.value == "") {
                                var myElement = document.getElementById("cpdid-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Compound ID Cannot be empty"));
                                errors.appendChild(li);
                                error = true;
                                if (!regex.test(document.getElementById('cpdfile').value)) {
                                    var myElement = document.getElementById("cfile-div");
                                    myElement.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Compound data file extension is not supported"));
                                    errors.appendChild(li);
                                    error = true;

                                }

                            }
                            if ((!in_cmpd_array(cmpd_array, cpdid.value) && cpdid.value != "") || cpdid.value == "") {
                                var myElement = document.getElementById("cpdid-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Entered Compound ID does not exist"));
                                errors.appendChild(li);
                                error = true;
                            }
                            else {
                                var myElement = document.getElementById("cpdid-div");
                                myElement.style.backgroundColor = "#F4F4F4";

                            }

                            if (suffix.value == "") {

                                var myElement = document.getElementById("suffix-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Suffix Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;
                            }
                            else {

                                suffix.value = suffix.value.replace(/\W/g, "-");
                            }

                            if (species.value == "") {
                                var myElement = document.getElementById("species-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Species Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else if (species.value.length >= 3) {
                                if (!in_species_array(species_array, species.value.substring(0, 3))) {
                                    var myElement = document.getElementById("species-div");
                                    myElement.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Species is not valid"));
                                    errors.appendChild(li);
                                    error = true;
                                }
                                else {
                                    var myElement = document.getElementById("species-div");
                                    myElement.style.backgroundColor = "#F4F4F4";

                                }
                            }
                            else {
                                var myElement = document.getElementById("species-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Species is not valid usually having minimum 3 characters"));
                                errors.appendChild(li);
                                error = true;

                            }
                            if (offset.value == "") {
                                var myElement = document.getElementById("offset-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Offset Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            if (glmt.value == "") {

                                glmt.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Gene Limit Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            var str_array = glmt.value.split(',');
                            if (str_array.length > 1) {
                                if ((!(/^-?\d*.?\d+$/.test(str_array[0]))) || (!(/^-?\d*.?\d+$/.test(str_array[1])))) {
                                    glmt.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Gene Limit Value must be numeric values separated by comma"));
                                    errors.appendChild(li);
                                    error = true;

                                }
                                else {
                                    glmt.style.backgroundColor = "#FFF";
                                }

                            }
                            else {
                                if (!(/^-?\d*.?\d+$/.test(glmt.value))) {
                                    glmt.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Gene Limit Value must be numeric"));
                                    errors.appendChild(li);
                                    error = true;

                                }

                                else {
                                    glmt.style.backgroundColor = "#FFF";
                                }

                            }
                            if (gbins.value == "") {

                                gbins.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Gene Bins Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else if (!(/^\d+$/.test(gbins.value))) {
                                gbins.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Gene bins Value must be numeric"));
                                errors.appendChild(li);
                                error = true;

                            }
                            else {
                                gbins.style.backgroundColor = "#FFF";

                            }
                            if (clmt.value == "") {

                                clmt.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Compound limit  Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;

                            }
                            var str_array = clmt.value.split(',');
                            if (str_array.length > 1) {
                                if ((!(/^-?\d*.?\d+$/.test(str_array[0]))) || (!(/^-?\d*.?\d+$/.test(str_array[1])))) {
                                    clmt.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Compound Limit Value must be numeric values separated by comma"));
                                    errors.appendChild(li);
                                    error = true;

                                }
                                else {
                                    clmt.style.backgroundColor = "#FFF";
                                }

                            }
                            else {
                                if (!(/^-?\d*.?\d+$/.test(clmt.value))) {
                                    clmt.style.backgroundColor = "#DA6666";
                                    var li = document.createElement("li");
                                    li.appendChild(document.createTextNode("Compound limit value should be neumeric"));
                                    errors.appendChild(li);
                                    error = true;
                                }
                                else {
                                    clmt.style.backgroundColor = "#FFF";
                                }
                            }

                            if (cbins.value == "") {

                                cbins.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Compound Bins Cannot be left empty"));
                                errors.appendChild(li);
                                error = true;


                            }
                            else if (!(/^\d+$/.test(cbins.value))) {
                                cbins.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Compound Bins values must be neumeric"));
                                errors.appendChild(li);
                                error = true;
                            }
                            else {
                                cbins.style.backgroundColor = "#FFF";
                            }
                            if (!(/^-?\d*.?\d+$/.test(offset.value))) {
                                var myElement = document.getElementById("offset-div");
                                myElement.style.backgroundColor = "#DA6666";
                                var li = document.createElement("li");
                                li.appendChild(document.createTextNode("Compound level offset  Value must be numeric"));
                                errors.appendChild(li);
                                error = true;

                            }
                            else {
                                var myElement = document.getElementById("offset-div");
                                myElement.style.backgroundColor = "#F4F4F4";

                            }


                            if (error) {
                                error = true;
                                errors.removeAttribute("hidden");
                                return false;

                            }
                            else {
                                document.getElementById('submit-button').setAttribute("data-toggle", "modal");
                                document.getElementById('submit-button').setAttribute("data-target", "#myModal");


                                for (var i = 0; i < selectBox.options.length; i++) {

                                    selectBox.options[i].selected = true;
                                }
                                var i = selectBox.options.length;


                                if (i > 0) {
                                    createCookie("pathidx", selectBox.options.length, 1);
                                    for (var j = 0; j <= i; j++) {
                                        createCookie("pathway" + j, "" + selectBox.options[j].value);
                                    }

                                }
                                else {
                                    i = parseInt(readCookie("pathidx"));
                                    if (i === null) {

                                    }
                                    else {
                                        for (var j = 1; j < parseInt(readCookie("pathidx")); j++) {
                                            eraseCookie("pathway" + j);
                                            eraseCookie("pathidx");
                                        }
                                    }

                                }


                            }


                        }
                        function colorCheck() {
                            document.getElementById("glow").value = "#00FF00";
                            /*  $glow = "#00FF00";
                             $gmid = "#D3D3D3";
                             $ghigh = "#FF0000";
                             $clmt = 1;
                             $cbins = 10;
                             $clow = "#0000FF";
                             $cmid = "#D3D3D3";
                             $chigh = "#FFFF00";*/
                        }
                        function createCookie(name, value, days) {
                            if (days) {
                                var date = new Date();
                                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                                var expires = "; expires=" + date.toGMTString();
                            }
                            else var expires = "";
                            document.cookie = name + "=" + value + expires + "; path=/";
                        }

                        function readCookie(name) {
                            var nameEQ = name + "=";
                            var ca = document.cookie.split(';');
                            for (var i = 0; i < ca.length; i++) {
                                var c = ca[i];
                                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
                            }
                            return null;
                        }

                        function eraseCookie(name) {
                            createCookie(name, "", -1);
                        }



                    </script>


                    <p id="suffix-div" <?php if (isset(Session::get('err_atr')['suffix'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?> <?php if($errors->has('suffix')): ?> style="background-color:#DA6666;" <?php endif; ?>><a href="tutorial#suffix"
                                                                                                  title="The suffix to be added after the pathway name as part of the output graph file"
                                                                                                  target="_blank"
                                                                                                  class="scrollToTop"
                                                                                                  style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a><?php echo form::label('suffix','suffix:'); ?>


                        <input type="text" class="ex8" name="suffix" id="suffix"
                               value="<?php echo isset(Session::get('Sess')['suffix']) ? Session::get('Sess')['suffix'] : $suffix ?>">
                    </p>

                </fieldset>
                <fieldset class="step">

                    <p id="kegg-layer-div">

                        <a href="tutorial#kegg"
                           title="to render pathway graph as native KEGG graph"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>
                        <?php echo form::label('kegg','Kegg Native:'); ?>


                        <input name="kegg" value="T" id="kegg"
                        <?php if (isset(Session::get('Sess')['kegg'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                                echo "checked";
                            }
                        }?>
                               type="checkbox">

                        <?php echo form::label('layer','Same Layer:'); ?>


                        <input name="layer" value="T" id="layer"
                        <?php if (isset(Session::get('Sess')['layer'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                                echo "checked";
                            }
                        }?>
                               type="checkbox">
                    </p>

                    <p id="desc-div">
                        <a href="tutorial#desc"
                           title="This argument tells whether gene data or compound data should be treated as discrete"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span>
                        </a>

                        <?php echo form::label('gdesc',' Descrete Gene:'); ?>


                        <input name="gdisc" value="T" id="gdisc"
                        <?php if (isset(Session::get('Sess')['gdisc'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                            }
                        }?>
                               type="checkbox">

                        <?php echo form::label('cdesc','Descrete Compound:'); ?>

                        <input name="cdisc" value="T" id="cdisc"
                        <?php if (isset(Session::get('Sess')['cdisc'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                            }
                        }?>
                               type="checkbox">
                    </p>

                    <p id="split-expand-div"><a href="tutorial#split"
                                                title="This argument tells whether gene data or compound data should be treated as discrete"
                                                target="_blank" class="scrollToTop"
                                                style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"> </span>
                        </a>
                        <?php echo form::label('split','Split Group:'); ?>

                        <input name="split" value="T" id="split"
                        <?php if (isset(Session::get('Sess')['split'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                            }
                        }?>
                               type="checkbox">

                        <?php echo form::label('expand','Expand Node:'); ?>

                        <input name="expand" value="T" id="expand"
                        <?php if (isset(Session::get('Sess')['expand'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                            }
                        }?>
                               type="checkbox"></p>

                    <p id="multi-matchd-div">
                        <a href="tutorial#multi"
                           title="Whether multiple states (samples or columns) gene data or compound data should be integrated / Whether the samples of gene data and Compound data are paired"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a><?php echo form::label('multistate','Multi State:'); ?>


                        <input name="multistate" value="T" id="multistate"
                        <?php if (isset(Session::get('Sess')['multistate'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                                echo "checked";
                            }
                        }?>
                               type="checkbox">

                        <?php echo form::label('matchd','Match Data:'); ?>


                        <input name="matchd" value="T" id="matchd"
                        <?php if (isset(Session::get('Sess')['multistate'])) {
                            echo "checked";
                        } else {
                            if (Session::get('Sess') == NULL) {
                                echo "checked";
                            }
                        }?>
                               type="checkbox">
                    </p>

                    <p id="offset-div" <?php if (isset(Session::get('err_atr')['offset'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#offset"
                           title="Specifies how much compound labels should be put above the default position or node center"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('offset','Compound Label Offset:'); ?>

                        <input type="text" class="ex8" name="offset" id="offset"
                               value="<?php echo isset(Session::get('Sess')['offset']) ? Session::get('Sess')['offset'] : $offset ?>">
                    </p>


                    <p id="kalgin-div">
                        <a href="tutorial#kalign"
                           title="Controls how the color keys are aligned when both Gene Data and Compound Data "
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('align','Key Alignment:'); ?>

                        <?php echo form::select('align', array('x' => 'x', 'y' => 'y'), isset(Session::get('Sess')['align']) ?
                        Session::get('Sess')['align'] : $align); ?>

                    </p>

                    <p id="pos-kpos-div">
                        <a href="tutorial#spos"
                           title="Controls the position of pathview signature and color keys"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('pos','Signature
                        Position:',array('class' => 'awesome')); ?>

                        <?php echo form::select('pos', array('bottomleft' => 'bottom left', 'bottomright' => 'bottom
                        right','topleft' => 'top left', 'topright' => 'top right'),isset(Session::get('Sess')['pos']) ?
                        Session::get('Sess')['pos'] : $pos); ?>

                        <?php echo form::label('kpos','Key Position:'); ?>

                        <?php echo form::select('kpos', array('bottomleft' => 'bottom left', 'bottomright' => 'bottom
                        right','topleft' => 'top left', 'topright' => 'top right'),isset(Session::get('Sess')['kpos']) ?
                        Session::get('Sess')['kpos'] : $kpos); ?>

                    </p>


                </fieldset>

                <fieldset class="step">
                    <style>
                        .coloration {
                            width: 120px;
                        }

                        .ex8 {

                        }
                    </style>

                    <p id="nodesum-div" <?php if (isset(Session::get('err_atr')['nodesun'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#nsum"
                           title="The method name to calculate node summary given that multiple genes or compounds are mapped to it."
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('nodesum','Node Sum:',array('class' => 'awesome')); ?>


                        <?php echo form::select('nodesun', array('sum' => 'sum', 'mean' => 'mean','median' => 'median', 'max'
                        => 'max','max.abs' => 'max.abs' ,'random' => 'random'),isset(Session::get('Sess')['nodesun']) ?
                        Session::get('Sess')['nodesun'] : $nsum); ?>

                    </p>

                    <p id="nacolor-div" <?php if (isset(Session::get('err_atr')['nacolor'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?> class="coloration">
                        <a href="tutorial#ncolor"
                           title="Color used for NA’s or missing values in Gene Data and Compound Data.."
                           target="_blank" class="scrollToTop" style="float:left;">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>
                        <?php echo form::label('nacolor','NA Color:'); ?>

                        <?php echo form::select('nacolor', array('transparent' => 'transparent', 'grey' => 'grey'),isset(Session::get('Sess')['nacolor']) ?
                        Session::get('Sess')['nacolor'] : $ncolor); ?>


                    </p>

                    <p id="glmt-clmt-div" <?php if (isset(Session::get('err_atr')['clmt'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?><?php if (isset(Session::get('err_atr')['glmt'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#limit"
                           title="This argument specifies the limit values for Gene Data and Compound Data when converting them to pseudo colors"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('limit','Gene Limit:'); ?>

                        <?php echo form::text('glmt',isset(Session::get('Sess')['glmt']) ? Session::get('Sess')['glmt']
                        :$glmt,array('class' => 'coloration', 'id' => 'glmt')); ?>


                        <?php echo form::label('limit','Compound Limit:'); ?>

                        <?php echo form::text('clmt',isset(Session::get('Sess')['clmt']) ? Session::get('Sess')['clmt'] :
                        $clmt,array('class' => 'coloration', 'id' => 'clmt')); ?>

                    </p>


                    <p id="gbins-cbins-div"<?php if (isset(Session::get('err_atr')['gbins'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?><?php if (isset(Session::get('err_atr')['cbins'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#bins"
                           title="This argument specifies the number of levels or bins for Gene Data and Compound Data when converting them to pseudo colors"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;"><span
                                    class="glyphicon glyphicon-info-sign"></span>
                        </a>
                        <?php echo form::label('Bins','Gene Bins:'); ?>

                        <?php echo form::text('gbins',isset(Session::get('Sess')['gbins']) ? Session::get('Sess')['gbins'] :
                        $gbins,array('class' => 'coloration', 'id' => 'gbins')); ?>


                        <?php echo form::label('Bins','Compound Bins:'); ?>

                        <?php echo form::text('cbins',isset(Session::get('Sess')['cbins']) ? Session::get('Sess')['cbins'] :
                        $cbins,array('class' => 'coloration', 'id' => 'cbins')); ?>

                    </p>


                    <p id="glow-clow-div"<?php if (isset(Session::get('err_atr')['glow'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?><?php if (isset(Session::get('err_atr')['clow'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#color"
                           title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('glow','Gene Low:'); ?>

                        <?php /*<?php echo form::text('glow',isset(Session::get('Sess')['glow']) ? Session::get('Sess')['glow'] :$glow,array('class' => 'coloration')); ?><input style="  width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color">*/ ?>
                        <input class="color coloration {hash:true}" id="glow" name="glow"
                               value=<?php echo e(isset(Session::get('genecolor')['glow']) ? Session::get('genecolor')['glow'] : '#00FF00'); ?>>
                        <?php echo form::label('clow','Compound Low:'); ?>

                        <input class="color coloration {hash:true}" id="clow" name="clow" value="#0000FF">
                        <?php /*<?php echo form::text('clow',isset(Session::get('Sess')['clow']) ? Session::get('Sess')['clow'] :
                             $clow,array('class' => 'coloration')); ?><input style="width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color">*/ ?>
                    </p>

                    <p id="gmid-cmid-div" <?php if (isset(Session::get('err_atr')['gmid'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?><?php if (isset(Session::get('err_atr')['cmid'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#color"
                           title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('gmid','Gene Mid:'); ?>

                        <input class="color coloration {hash:true}" id="gmid" name="gmid" value="#D3D3D3">
                        <?php /*<?php echo form::text('gmid',isset(Session::get('Sess')['gmid']) ? Session::get('Sess')['gmid'] :
                        $gmid,array('class' => 'coloration')); ?><input style="  width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color">*/ ?>

                        <?php echo form::label('cmid','Compound Mid:'); ?>

                        <input class="color coloration {hash:true}" id="cmid" name="cmid" value="#D3D3D3">
                        <?php /* <?php echo form::text('cmid',isset(Session::get('Sess')['cmid']) ? Session::get('Sess')['cmid'] :
                         $cmid,array('class' => 'coloration')); ?><input style="  width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color">*/ ?>
                    </p>

                    <p id="ghigh-chigh-div"<?php if (isset(Session::get('err_atr')['ghigh'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?><?php if (isset(Session::get('err_atr')['chigh'])) {
                        echo "style='background-color:#DA6666;'";
                    } ?>>
                        <a href="tutorial#color"
                           title="These arguments specify specifies the color spectra to code Gene Data and Compound Data"
                           target="_blank" class="scrollToTop" style="float:left;margin-right:5px;">
                            <span class="glyphicon glyphicon-info-sign"></span></a>
                        <?php echo form::label('ghigh','Gene High:'); ?>

                        <input class="color coloration {hash:true}" id="ghigh" name="ghigh" value="#FF0000">
                        <?php /*<?php echo form::text('ghigh',isset(Session::get('Sess')['ghigh']) ? Session::get('Sess')['ghigh'] :$ghigh,array('class' => 'coloration')); ?><input style="  width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color" onclick="return colorCheck()"/>*/ ?>

                        <?php echo form::label('chigh','Compound High:'); ?>

                        <input class="color coloration {hash:true}" id="chigh" name="chigh" value="#FFFF00">
                        <?php /*<?php echo form::text('chigh',isset(Session::get('Sess')['chigh']) ? Session::get('Sess')['chigh'] :$chigh,array('class' => 'coloration')); ?><input style="  width: 6%;padding: 6px; height: 40px;" id="glow_picker" class="form-control" onchange="clickColor(0, -1, -1, 5)" value="#ff0000" type="color" onclick="return colorCheck()"/>*/ ?>
                    </p>


                </fieldset>


                <fieldset class="step">

                    <p class="success">
                        <b>Ready to go?</b>
                    </p>

                    <input type="submit" class="btn btn-primary"
                           style="font-size: 16px;width: 30%;margin-left:13%;margin-top: 10px;" value="Submit"
                           onclick="return fileCheck()"/>
                    <input type="Reset" class="btn btn-primary"
                           style="font-size: 16px;width: 30%;margin-left:13%;margin-top: 10px;" value="Reset"/>


                </fieldset>


            </div>
            <div class="steps">
                <input type="submit" id="submit-button" class="btn btn-primary"
                       style="font-size: 20px;width: 30%;margin-left:0%;margin-top: 10px;" value="Submit"
                       onclick="return fileCheck()"/>
                <input type="Reset" id="reset" class="btn btn-primary"
                       style="font-size: 20px;width: 30%;margin-left:10%;margin-top: 10px;" value="Reset" onclick="return reset()"/>
            </div>
            <?php echo form::close(); ?>

        </div>


        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             aria-hidden="true">
            <div style="opacity:0.3; background: #006980;width: 100%;height:100%">
                <img class="first-slide" style="margin-top: 10%;width:20%"
                     src="images/loading.gif">
            </div>

        </div>


    </div>


    </div>





<?php $__env->stopSection(); ?>


<?php echo $__env->make('app', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>