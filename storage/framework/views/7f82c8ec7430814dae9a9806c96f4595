<?php $__env->startSection('content'); ?>

    <?php echo $__env->make('navigation', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
    <div class="col-md-10">
        <div class="col-md-8">
            <div class="placeholders ">
        <?php
        echo "<h1> Analysis Results </h1>";
                echo "<h2>Analysis ID:".$_SESSION['analyses_id']."</h2>";
        global $dirct;
                if (!is_null($exception)) {
                        echo "<h1 class='alert alert-danger' style='font-size: 18px;'> Sorry !!! there was an issue in the analysis</h1>";
                }
        $direct = $directory;
        $contents = scandir($directory);

        if ($contents) {
            foreach ($contents as $key => $value) {
                if ($value == "." || $value == "..") {
                    unset($key);

                }
            }
        }

        $val = "";
        $id = $_SESSION['id'];
        $id = substr($id, 0, 8);
        $flag = false;
        $flag1 = false;
        $flag2 = false;
        $files_to_zip = array();

        foreach ($contents as $k => $v) {

        if (strpos($v, 'log') !== false || strpos($v, "" . $id . ".txt")) {
            echo "<li><a target=\"_blank\" href=\"$directory1/" . $v . "  \">$v</a></li>";
            array_push($files_to_zip, $directory1 . "/" . $v);
        }
        }


if(!$flag1)
                {
                echo "<h2>Pathview Graphs:</h2>";
                echo "<ul >";
        foreach ($contents as $k => $v) {

        //echo $k;
        if (strpos($v, $_SESSION['suffix'])) {
        $val = $v;
        $analyses_id = $_SESSION['analyses_id'];
        $id = substr($val, 0, 8);
        if (strpos($val, 'png')) {
        echo "<li  style='font-size: 24px; list-style-type: none;'>  <a target=\"_blank\" href=\"viewer?analyses=$analyses_id&id=$id&image=$val\" > " . $val . "</a></li>";?>

        <?php

        array_push($files_to_zip, $directory1 . "/" . $val);

        } else {
            echo "<li  style='font-size: 24px;list-style-type: none;'>  <a target=\"_blank\" href=\"$directory1/" . $val . "  \">$val</a></li>";
            array_push($files_to_zip, $directory1 . "/" . $val);
                }

            }

        }

            echo "</ul>";



        chdir($directory);
        $rootPath = realpath($directory);

        // Initialize archive object
        $zip = new ZipArchive();
        $zip->open('file.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE);

        // Create recursive directory iterator
        /** @var SplFileInfo[] $files */
        $files = new RecursiveIteratorIterator(
                new RecursiveDirectoryIterator($rootPath),
                RecursiveIteratorIterator::LEAVES_ONLY
        );

        foreach ($files as $name => $file) {
            // Skip directories (they would be added automatically)
            if (!$file->isDir()) {
                #echo $file;
                if (strpos($file, 'log') !== false || strpos($file, "" . $id . ".txt") || (strpos($file, $_SESSION['suffix']))) {
                // Get real and relative path for current file
                $filePath = $file->getRealPath();
                $relativePath = substr($filePath, strlen($rootPath) + 1);

                // Add current file to archive
                $zip->addFile($filePath, $relativePath);
                }
            }
        }

        // Zip archive will be created only after closing object
        #print_r($zip);
        $zip->close();
                echo "<h2 class='alert alert-info' style='font-size: 18px;'>Click <a style='color:black;'  href=\"" . $directory1 . "file.zip\">here</a> to download zipped output files. </h2>";

        $data['path'] = $direct;

        if(Auth::user())
        {

            $data['content'] = "?analyses=".$_SESSION['analyses_id'] . "&id=" . $_SESSION['id'] . "&suffix=" . $_SESSION['suffix'] ."&email=" . Auth::user()->email;
            $data['name'] = Auth::user()->name;
            $data['time'] = date('l jS \of F Y h:i:s A');
            $data['anal_type'] = $_SESSION['anal_type'];
            $data['argument'] = $_SESSION['argument'];
            Mail::queue('emails.test', $data, function ($message) use ($data) {
                try {
                    $user = Auth::user();
                    #$file =$data['path'] . 'file' . '.zip';
                    #$message->attach($file, array('as' => 'Pathway-files', 'mime' => 'application/zip'));

                    $message->to($user->email, $user->name)->subject('Pathway success');

                    echo "<h2 class='alert alert-info' style='font-size: 18px;'>Results were also emailed to $user->email </h2>";
                } catch (Exception $e) {
                    echo "Sorry Not able to send the files in mail";
                }
            });
        } else{
            Session::put('anal_id', $_SESSION['analyses_id']);
            $anal = $_SESSION['analyses_id'];
            echo "<h2 style='font-size:18px;' class='alert alert-info' ><a style='color:black;font-size:18px;' href='/auth/register'>Register</a> or <a style='color:black;font-size:18px;' href='/auth/login'>Login</a> to save the outputs and a lot more.<h2>";

        ?>


        <?php if(count($errors) > 0): ?>
            <div class="alert alert-danger">
                <strong>Whoops!</strong> There were some problems with your input.<br><br>
                <ul>
                    <?php foreach($errors->all() as $error): ?>
                        <li><?php echo e($error); ?></li>
                    <?php endforeach; ?>
                </ul>
            </div>
        <?php endif; ?>
       




    <?php
        }
                }
            foreach ($contents as $k => $v) {
            if(strcmp($v, "errorFile.Rout") == 0)
            {
            $v = $directory . "/" . $v;
            if(filesize($v) > 0)
            {

            $lines = file($v);
            foreach ($lines as $temp) {

                $temp = strtolower($temp);
                $array_string = explode(" ", $temp);
                foreach ($array_string as $a_string) {


                    if (strcmp($a_string, 'error') == 0 || strcmp($a_string, 'warning:') == 0 || strcmp($a_string, 'error:')==0 ) {
                        if (!$flag) {
                            echo "<h4 class='alert alert-warning'> Species and pathway id combination is not Valid/present at KEGG";
                            echo " Or make sure your input gene and compound uploaded data is in the requested format</h4><ul class='alert alert-danger'>";
                            if(strcmp($a_string, 'error')==0||strcmp($a_string, 'warning:')==0)
                            {
                                $flag1 = true;
                            }

                        }



                    echo "<li>" . $temp . "</li>";

                        $flag = true;

                    }

                }


            }
            if ($flag1) {
                echo "</ul>";
                echo "<button onclick='goBack()'>Go Back</button>";
            }



            ?>

            <script>
                function goBack() {
                    window.history.back();
                }
            </script><?php
            }
            }
            }
        ?>
        <h1> Analysis Input arguments </h1>
        <br/>

        <div class="bs-example" data-example-id="condensed-table">
            <table border=1 style="width:70%" class="table table-condensed">
                <thead>
                <tr>
                    <th>Argument Name</th>
                    <th>Value</th>

                    <tbody>


                    <?php
                    $arguments = array();

                    $arguments = explode(",", $_SESSION['argument']);
                    $arguments = array_unique($arguments);
                    foreach($arguments as $arg)
                    {


                    if(strpos($arg, ":"))
                    {

                    $arg1 = explode(':', $arg);
                    if(sizeof($arg1) > 1 && strcmp($arg1[0], "targedir") != 0 )
                    {
                    switch($arg1[0])
                    {
                    case "geneid":
                    $arg1[0] = "Gene ID Type";
                    ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;

                case "cmpdid":
                $arg1[0] = "Compound ID Type";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;

                case "species":
                $arg1[0] = "Species";
                $val = DB::select(DB::raw("select concat(concat(species_id,\"-\"),species_desc) as spe from Species where species_id like '$arg1[1]' LIMIT 1"));

                if (sizeof($val) > 0) {
                    $arg1[1] = $val[0]->spe;
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "suffix":
                $arg1[0] = "Output Suffix";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "pathway":
                $arg1[0] = "Pathway ID";
                $val = DB::select(DB::raw("select concat(concat(pathway_id,\"-\"),pathway_desc) as path from Pathway where pathway_id like '$arg1[1]' LIMIT 1"));
                if (sizeof($val) > 0) {
                    $arg1[1] = $val[0]->path;
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "kegg":
                $arg1[0] = "Kegg Native";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "layer":
                $arg1[0] = "Same Layer";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "gdisc":
                $arg1[0] = "Descrete Gene";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "cdisc":
                $arg1[0] = "Descrete Compound";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }

                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "split":
                $arg1[0] = "Split Group";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "expand":
                $arg1[0] = "Expand Node";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "multistate":
                $arg1[0] = "Multi State";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "matchd":
                $arg1[0] = "Match Data";
                if ($arg1[1] == 'T') {
                    $arg1[1] = "True";
                } else {
                    $arg1[1] = "False";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "offset":
                $arg1[0] = "Compound Label Offset";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "kpos":
                $arg1[0] = "Key Position";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "pos":
                $arg1[0] = "Signature Position";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "align":
                $arg1[0] = "Key Alignment";
                if ($arg1[1] == 'x') {
                    $arg1[1] = "X - Axis";
                } else {
                    $arg1[1] = "y - Axis";
                }
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "glmt":
                $arg1[0] = "Gene Limit";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "glmtlow":
                $arg1[0] = "Gene Low";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "glmthigh":
                $arg1[0] = "Gene High";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e(str_replace(';',', ',$arg1[1])); ?></td>
                </tr>
                <?php
                break;
                case "clmt":
                $arg1[0] = "Compound Limit";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e(str_replace(';',', ',$arg1[1])); ?></td>
                </tr>
                <?php
                break;
                case "gbins":
                $arg1[0] = "Gene Bins";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "cbins":
                $arg1[0] = "Compound Bins";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "clow":
                $arg1[0] = "Compound Low";

                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "cmid":
                $arg1[0] = "Compound Mid";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "chigh":
                $arg1[0] = "Compound High";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "glow":
                $arg1[0] = "Gene Low";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "gmid":
                $arg1[0] = "Gene Mid";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "ghigh":
                $arg1[0] = "Gene High";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td style='background-color:<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "nsum":
                $arg1[0] = "Node Sum";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case "ncolor":
                $arg1[0] = "NA Color";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;
                case 'filename':
                $arg1[0] = "Gene Data";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td>Click here to view/Download the file: <a target="_blank"
                                                                 href='<?php echo e($_SESSION["workingdir"]); ?>/<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></a>
                    </td>
                </tr>
                <?php
                break;
                case 'cfilename':

                $arg1[0] = "Compound Data";
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td>Click here to view/Download the file: <a target="_blank"
                                                                 href='<?php echo e($_SESSION["workingdir"]); ?>/<?php echo e($arg1[1]); ?>'><?php echo e($arg1[1]); ?></a>
                    </td>
                </tr>
                <?php
                break;
                default:
                ?>
                <tr>
                    <td><b><?php echo e($arg1[0]); ?></b></td>
                    <td><?php echo e($arg1[1]); ?></td>
                </tr>
                <?php
                break;

                }


                }
                } }


                ?>

                </tbody>
            </table>
        </div>
            </div>

    </div>
        <div class="list-group col-md-4">
            <ul class="nav navbar-nav" style="  margin-left: 30px;">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle list-group-item active" style="width:300px;"
                       data-toggle="dropdown">Click her to see Analysis Logs<span
                                class="glyphicon glyphicon-download pull-right"></span></a>
                    <ul class="dropdown-menu" style="width:600px;">

                        <?php
                        $lines = file($directory . "errorFile.Rout");
                        $flag = false;

                        foreach ($lines as $temp) {
                            if (strpos($temp,'directory') == false)
                            {

                                echo "<pre>" . $temp . "</pre>";
                            }


                            /**echo "<li style='width:300px;'>" . $temp ."</li>";
                            echo "<li class='divider'></li>";*/


                        }
                        ?>


                    </ul>
                </li>
            </ul>
        </div>
    </div>

<?php $__env->stopSection(); ?>
<?php echo $__env->make('app', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>