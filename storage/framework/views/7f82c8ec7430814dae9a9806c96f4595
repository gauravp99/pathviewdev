<?php $__env->startSection('content'); ?>

    <?php echo $__env->make('navigation', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
    <div class="row1 placeholders">
        <?php
            echo "<h1> Analysis Results </h1>";
        //echo $destFile;
        //$directory = $destFile;//$_SESSION['workingdir'];
        global $dirct;
        $direct= $directory;
        $contents = scandir($directory);

        if ($contents) {
            foreach ($contents as $key => $value) {
                if ($value == "." || $value == "..") {
                    unset($key);

                }
            }
        }
        echo "<ul>";
        $val = "";
        $id = $_SESSION['id'];
        $id = substr($id, 0, 8);
            $flag = false;
            $flag1 = false;
        $files_to_zip=array();

        foreach ($contents as $k => $v) {
            if(strcmp($v,"errorFile.Rout")==0)
                {
            $v= $directory."/".$v;
                   if(filesize($v)>0)
                       {

                           $lines = file($v);
                           foreach($lines as $temp)
                               {

                                   $temp = strtolower($temp);
                                   $array_string = explode(" ",$temp);
                                           foreach($array_string as $a_string)
                                               {

                                             if (strcmp($a_string,'error')==0) {
                                                   if(!$flag)
                                                       {
                                                           echo "<h4 class='alert alert-info'> Sorry make sure your input gene and compound uploaded data is in the requested format. You can look at the instruction page for details and sample files</h4><ul class='alert alert-danger'>";
                                                           $flag1= true;
                                                       }
                                                   echo "<li>".$temp."</li>";
                                                   $flag=true;
                                                   break;
                                                   }

                                               }


                                }
            if($flag1)
            {
                echo "</ul>";
                echo "<button onclick='goBack()'>Go Back</button>";
            }


                    ?>

            <script>
                function goBack() {
                    window.history.back();
                }
            </script><?php
                       }
                }
            if (strpos($v, 'log') !== false || strpos($v, "" . $id . ".txt"))
                {
                echo "<li><a target=\"_blank\" href=\"$directory1/" . $v . "  \">$v</a></li>";
                array_push($files_to_zip,$directory1."/".$v);
                    }
        }
        echo "</ul>";


            foreach ($contents as $k => $v) {
                //echo $k;
                if (strpos($v, $_SESSION['suffix'])) {
                    $val = $v;

                    $id = substr($val, 0, 8);
                    if (strpos($val, 'png')) {
                        echo "<li>Click here to view the pathview  <a target=\"_blank\" href=\"viewer?id=$id&image=$directory1/$val\" > " . $val . "</a>";
                        array_push($files_to_zip,$directory1."/".$val);
                    } else
                        {
                        echo "<li>Click here to view the pathview  <a target=\"_blank\" href=\"$directory1/" . $val . "  \">$val</a></li>";
                    array_push($files_to_zip,$directory1."/".$val);
                            }

                }
            }

                chdir($directory);
            $rootPath = realpath($directory);

            // Initialize archive object
            $zip = new ZipArchive();
            $zip->open('file.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE);

            // Create recursive directory iterator
            /** @var SplFileInfo[] $files */
            $files = new RecursiveIteratorIterator(
                    new RecursiveDirectoryIterator($rootPath),
                    RecursiveIteratorIterator::LEAVES_ONLY
            );

            foreach ($files as $name => $file)
            {
                // Skip directories (they would be added automatically)
                if (!$file->isDir())
                {
                    // Get real and relative path for current file
                    $filePath = $file->getRealPath();
                    $relativePath = substr($filePath, strlen($rootPath) + 1);

                    // Add current file to archive
                    $zip->addFile($filePath, $relativePath);
                }
            }

            // Zip archive will be created only after closing object
                #print_r($zip);
            $zip->close();
            echo "<h2 class='alert alert-info'>Click here to download zipped output files generated <a  href=\"". $directory1. "file.zip\">Zipped Output file</a><h2>";

            $data['path'] = $direct;

            if(Auth::user())
            {

                $data['content'] = "?directory=".$directory."&dir=".$directory1."&id=".$_SESSION['id']."&suffix=".$_SESSION['suffix'];
                $data['name'] = Auth::user()->name;
                $data['time'] = date('l jS \of F Y h:i:s A');
                $data['anal_type'] = $_SESSION['anal_type'];
                Mail::queue('emails.test', $data, function($message) use ($data) {
                try {
                    $user =Auth::user();
                    #$file =$data['path'] . 'file' . '.zip';
                    #$message->attach($file, array('as' => 'Pathway-files', 'mime' => 'application/zip'));

                    $message->to($user->email,$user->name)->subject('Pathway success');

                    echo "<br/><h2 class='alert alert-success'>Mail sent to your email id . $user->email. check your mail to access all output files generated<h2>";
                } catch (Exception $e) {
                  echo "Sorry Not able to send the files in mail";
                }
            });
           } else{
                echo "<br/><h2 class='alert alert-info'>Register to save the pathways generated and lot more.It is free.<h2>";?>
            <div class="col-sm-4 col-md-offset-2">
                <button type="button" class="  btn btn-primary btn-lg register" style="border-radius: 1px;"
                        data-toggle="modal" data-target="#myModal">
                    Click here to Register
                </button>
            </div>

            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
                 aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title " id="myModalLabel">Register</h4>
                        </div>
                        <div class="modal-body">
                            <form class="form-horizontal" role="form" method="POST"
                                  action="<?php echo e(url('/auth/register')); ?>">
                                <input type="hidden" name="_token" value="<?php echo e(csrf_token()); ?>">

                                <div class="form-group">
                                    <label class="col-md-4 control-label">Name</label>

                                    <div class="col-md-6">
                                        <input type="text" class="form-control" name="name"
                                               value="<?php echo e(old('name')); ?>">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-md-4 control-label">E-Mail Address</label>

                                    <div class="col-md-6">
                                        <input type="email" class="form-control" name="email"
                                               value="<?php echo e(old('email')); ?>">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-4 control-label">Organisation</label>

                                    <div class="col-md-6">
                                        <input type="text" class="form-control" name="organisation"
                                               value="<?php echo e(old('organisation')); ?>">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-md-4 control-label">Password</label>

                                    <div class="col-md-6">
                                        <input type="password" class="form-control" name="password">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-md-4 control-label">Confirm Password</label>

                                    <div class="col-md-6">
                                        <input type="password" class="form-control"
                                               name="password_confirmation">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-6 col-md-offset-4">
                                        <button type="submit" class="btn btn-primary">
                                            Register
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <?php
        }
        ?>
    </div>
<?php $__env->stopSection(); ?>
<?php echo $__env->make('app', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>